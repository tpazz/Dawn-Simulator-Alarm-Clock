COM3505 week 01 course notes
===

# The Lecture

This week's [lecture slides are
here](https://docs.google.com/presentation/d/10bi8BPmFM6bm3AebvKyDFy4YtO49bFbLoLnlg-US_YU/edit?usp=sharing).


# Learning Objectives

Our objectives this week are to:

- get to know the Diamond electronics lab
- understand how to prototype basic circuits on a breadboard
- do a first little bit of soldering
- check out the course materials from gitlab
- set up the programming environments and start coding

If you're finished early in the lab tomorrow you might also want to learn
about measuring simple values (using the multimeters and/or oscilloscope), but
this is optional.


# Assignments

- You should have already created a Git repository for the course and sent us
  your GitLab user name (see [the week 0
  notes](https://gitlab.com/hamishcunningham/unphone/blob/master/doc/com3505/Week00.mkd)).
  If not **do it now!!!**
- [Get into a pair](Week01/Pairs.mkd) for the lab work and practical
  assessments. (If not, just choose a workstation/partner at random in the
  lab.)
- **Hardware 1**: work through [COM3505 DIA 2.02
  Introduction](https://goo.gl/GkGvJT) to practice breadboarding, soldering
  and using a multimeter: (**please pay particular attention to the safety
  protocols for the electronics lab described there**).
- [Set up your programming environment](Week01/Setup.mkd) and try burning the
  "Blink" sketch to your ESP32 (from `File>Examples>01.Basics>Blink` in the
  IDE).


# First Lab Checklist

- Make sure you have been given the hardware kits; you can keep these until
  week 6 but then you need to hand back the boxed kit _in good condition!_.
  We'll give you an [unPhone](https://unphone.net/the-unphone/) and other
  project hardware (to keep!) in week 6.
- Always use the Linux option [when booting
  machines](https://www.sheffield.ac.uk/cics/desktop/bootingltsp) in the
  electronics lab.
- When you've got your environment set up properly, `ssh -AX lincomp` will log
  you into a compile server; and `cd ~/unphone; make arduino-ide` will run the
  IDE for you. (Problem? See
  [troubleshooting](Week01/Setup.mkd#troubleshooting-ssh-access).)
- Work through the four assignments above.
- Finished? Learn a little C! See the resources listed in the lecture slides
  for help.
- Couldn't get through it all? Don't worry too much; you can catch up in the
  iForge, or the lab session next week, or just by reading up on the theory.
  We're not assessing you until week 6, so at this point the important thing
  is to start getting a flavour of the work.


# Timetable

- We have one lecture (of one hour, Mondays from 1pm) and one lab (of two
  hours, Tuesdays from 2pm) per week.
- Lectures are in Diamond LT5. Labs are in Diamond 2.02, the electronics (EE)
  lab.
- You can also use the facilities in the iForge (the Diamond 1.01 project
  space) if you wish, and the EE lab is sometimes free on Wednesday
  afternoons.
- The lab sessions in Weeks 6 and 12 are assessed sessions, and the work you
  demonstrate (and have pushed to git) then each counts for 30% of your mark.
- There is a mock exam (MOLE quiz) in Week 7 and the real exam in Week 12
  (which counts for 40% of your mark).
- There is no lecture in Week 6 (reading week and lab assessment 1) or Week 12
  (lab assessment 2 and exam week).



# Reading

- Schneier, Bruce. 2017. “Click Here to Kill Everyone.” NY Mag, January.
  http://nymag.com/selectall/2017/01/the-internet-of-things-dangerous-future-bruce-schneier.html.
- Ashton, Kevin. 2011. “That ‘Internet of Things’ Thing.” RFiD Journal 22 (7).
  http://www.itrco.jp/libraries/RFIDjournal-That%20Internet%20of%20Things%20Thing.pdf
- Like many embedded electronics and IoT developers, we use the Linux
  command-line (otherwise known as `shell` or `bash`, often running in a
  `terminal`) to do many of our tasks. On MacOS an old version is available by
  default, or [update like
  this](https://itnext.io/upgrading-bash-on-macos-7138bd1066ba). Ports of
  these tools are also available for Windows (try Cygwin, Git Bash, Windows
  Subsystem for Linux, or perhaps an Ubuntu VM or container via Docker). If
  you find these tools difficult then please read up on them and practice.
  [See also the links about tools in the week 0
  notes](https://gitlab.com/hamishcunningham/unphone/blob/master/doc/com3505/Week00.mkd#good-tools-to-learn).
- "Unauthorized Bread", Cory Doctorow (in _Radicalized_, 2019).
